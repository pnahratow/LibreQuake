name: Build and Release

on:
  release:
    types: [created]
  push:
    branches:
      - main
      - parallel_build

env:
  PYTHONUNBUFFERED: 1

# Cancel redundant builds on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wads:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: bash -x .github/scripts/install_deps.sh
    - name: Build wads
      run: |
        export PATH="/tmp/qpakman:/tmp/fteqcc:/tmp/ericw-tools:$PATH"
        python build.py --compile-wads

  build_progs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: bash -x .github/scripts/install_deps.sh
    - name: Build progs
      run: |
        export PATH="/tmp/qpakman:/tmp/fteqcc:/tmp/ericw-tools:$PATH"
        python build.py --compile-progs

  build_maps:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        map_dir: [brushmodels, dm, e0, e1, e2, e3, e4, misc, prefabs]
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: bash -x .github/scripts/install_deps.sh
    - name: Build progs
      run: |
        export PATH="/tmp/qpakman:/tmp/fteqcc:/tmp/ericw-tools:$PATH"
        cd lq1/maps
        python compile_maps.py -d src/${{ matrix.map_dir }}

#   build_release:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - name: Install dependencies
#       run: bash -x .github/scripts/install_deps.sh
#     - name: Build release artifacts
#       env:
#         PYTHONUNBUFFERED: 1
#       run: |
#         export PATH="/tmp/qpakman:/tmp/fteqcc:/tmp/ericw-tools:$PATH"
#         python build.py
#     - name: Zip artifacts
#       run: |
#         cd releases
#         zip -r full.zip full
#         zip -r mod.zip mod
#         zip -r lite.zip lite
#         zip -r mod_lite.zip mod_lite
#         zip -r dev.zip dev
#         cd ..
#     - name: Make artifact available on non-release pipelines
#       if: github.event_name != 'release'
#       uses: actions/upload-artifact@v4
#       with:
#         name: full.zip
#         path: releases/full.zip
#         retention-days: 14
#     - name: Upload asset full.zip
#       if: github.event_name == 'release'
#       uses: actions/upload-release-asset@v1
#       env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ github.event.release.upload_url }}
#         asset_path: releases/full.zip
#         asset_name: full.zip
#         asset_content_type: application/zip
